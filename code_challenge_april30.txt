--Milen Buchillon-Triff  4/30/18

--after we connect to the database engine...

--actually this is how I'd create the database, in my instance of SQL
Server (come back to this later)

USE Personsdb; 
GO
CREATE DATABASE Persons_and_Orders
ON
(
	NAME = ...,
	FILENAME = ...,
	SIZE = 10,
	MAXSIZE = 50,
	FILEGROWTH = 5
)

LOG ON
(
	NAME =...,
	FILENAME = ...,
	SIZE = 5MB,
	MAXSIZE = 25MB,
	FILEGROWTH = 5MB
);
GO




--first we create the tables Products, Orders, and Customers

CREATE TABLE Orders(ID int, ProductID int, CustomerID int, 
PRIMARY KEY (ID, CustomerID));

CREATE TABLE Products(ProductID int, Name NVARCHAR, Price decimal,
PRIMARY KEY (ID));

CREATE TABLE Customers(CustomerID int, FirstName NVARCHAR, LastName NVARCHAR, CardNumber int, PRIMARY KEY(ID));



--add at least 3 records into each table (come back to this later)


INSERT INTO Orders
VALUES (2, 3, 4), (5, 6, 7), (8, 9, 10);

INSERT INTO Products
VALUES (2, laptop, 300.00), (3, electrical_adapter, 200.00), (4,

Samsung_phone, 400.00);

INSERT INTO Customers
VALUES(2, Mark, Gonzalez, 3333333), (3, Ursula, Johnson, 456891111),
(4, Beatrice, Gomez, 432589999);



--add product iPhone priced at $200

INSERT INTO Products(ProductID, Name, Price)
VALUES (1, 'iPhone', 200.00);


--add customer Tina Smith

INSERT INTO Customers(CustomerID, FirstName, LastName, CardNumber)
VALUES(1, 'Tina', 'Smith', 123456781234);


--create order for Tina Smith bought an iPhone

INSERT INTO Orders(ID, ProductID, CustomerID)
VALUES(1, 1, 1);


--Report all orders by Tina Smith  

SELECT CustomerID
FROM Orders o INNER JOIN Customers c
ON o.CustomerID = c.CustomerID
WHERE CustomerID = 1;



--report all revenue generated by sales of iPhones

SELECT SUM(Price)
FROM Orders o INNER JOIN Products p
ON o.ProductID = p.ProductID
WHERE ProductID = 1;



--increase the price of an iPhone to $250

UPDATE Products
SET Price = 250
WHERE Name = 'iPhone';



